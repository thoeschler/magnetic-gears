(((x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y - Rm * np.sin(alpha))) * (((-d - z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * ((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) ** (3 / 2)) - (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2)))) / (1 + ((-d - z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 * ((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) - (((x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y - Rm * np.sin(alpha))) * (((d - z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * ((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) ** (3 / 2)) - (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2)))) / (1 + ((d - z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 * ((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) - (((x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y - Rm * np.sin(alpha))) * (((-d - z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * ((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) ** (3 / 2)) - (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2)))) / (1 + ((-d - z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 * ((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) + (((x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y - Rm * np.sin(alpha))) * (((d - z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * ((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) ** (3 / 2)) - (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) * np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2)))) / (1 + ((d - z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 * ((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) - (((x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y + Rm * np.sin(alpha))) * (-(((-d + z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * ((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) ** (3 / 2))) + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))) / (1 + ((-d + z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 * ((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) + (((x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y + Rm * np.sin(alpha))) * (-(((d + z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * ((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) ** (3 / 2))) + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))) / (1 + ((d + z) ** 2 * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 * ((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) + (((x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y + Rm * np.sin(alpha))) * (-(((-d + z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * ((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) ** (3 / 2))) + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))) / (1 + ((-d + z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 * ((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) - (((x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y + Rm * np.sin(alpha))) * (-(((d + z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * ((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) ** (3 / 2))) + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) * np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))) / (1 + ((d + z) ** 2 * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) / ((-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 * ((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))

-((-Rm + w + x * np.cos(alpha) + y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) - 2 * (Rm - w) * y * np.sin(alpha))) + (-Rm + w + x * np.cos(alpha) + y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) - 2 * (Rm - w) * y * np.sin(alpha)) + (-Rm + w + x * np.cos(alpha) - y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) + 2 * (Rm - w) * y * np.sin(alpha)) + (Rm - w - x * np.cos(alpha) + y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) + 2 * (Rm - w) * y * np.sin(alpha)) - (Rm + w - x * np.cos(alpha) - y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) - 2 * (Rm + w) * y * np.sin(alpha)) + (Rm + w - x * np.cos(alpha) - y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) - 2 * (Rm + w) * y * np.sin(alpha)) + (Rm + w - x * np.cos(alpha) + y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) + 2 * (Rm + w) * y * np.sin(alpha)) + (-Rm - w + x * np.cos(alpha) - y * np.sin(alpha)) / np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) + 2 * (Rm + w) * y * np.sin(alpha))

-np.log(-Rm + w + x * np.cos(alpha) + y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) - 2 * (Rm - w) * y * np.sin(alpha))) + np.log(-Rm + w + x * np.cos(alpha) + y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) - 2 * (Rm - w) * y * np.sin(alpha))) + np.log(-Rm + w + x * np.cos(alpha) - y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) + 2 * (Rm - w) * y * np.sin(alpha))) - np.log(-Rm + w + x * np.cos(alpha) - y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 - 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm - w) * x * np.cos(alpha) + 2 * (Rm - w) * y * np.sin(alpha))) + np.log(-Rm - w + x * np.cos(alpha) + y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) - 2 * (Rm + w) * y * np.sin(alpha))) - np.log(-Rm - w + x * np.cos(alpha) + y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) - 2 * (Rm + w) * y * np.sin(alpha))) - np.log(-Rm - w + x * np.cos(alpha) - y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 - 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) + 2 * (Rm + w) * y * np.sin(alpha))) + np.log(-Rm - w + x * np.cos(alpha) - y * np.sin(alpha) + np.sqrt(d ** 2 + Rm ** 2 + 2 * Rm * w + w ** 2 + x ** 2 + y ** 2 + 2 * d * z + z ** 2 - 2 * (Rm + w) * x * np.cos(alpha) + 2 * (Rm + w) * y * np.sin(alpha)))

-((-d - z) ** 2 / (np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)) + np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2)))) + (d - z) ** 2 / (np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)) + np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) + (-d - z) ** 2 / (np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)) + np.sqrt((-d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) - (d - z) ** 2 / (np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2) * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha)) + np.sqrt((d - z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) + np.cos(alpha) * (y - Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) + np.sin(alpha) * (y - Rm * np.sin(alpha))) ** 2))) - (-d + z) ** 2 / (np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)) + np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) + (d + z) ** 2 / (np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) * (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)) + np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (-w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) + (-d + z) ** 2 / (np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)) + np.sqrt((-d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2))) - (d + z) ** 2 / (np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2) * (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha)) + np.sqrt((d + z) ** 2 + (-(x - Rm * np.cos(alpha)) * np.sin(alpha) - np.cos(alpha) * (y + Rm * np.sin(alpha))) ** 2 + (w + np.cos(alpha) * (x - Rm * np.cos(alpha)) - np.sin(alpha) * (y + Rm * np.sin(alpha))) ** 2)))

